%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 345.000000 244.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 345 244
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 345 244
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YuGothic-Bold
%!FontType1-1.0: YuGothic-Bold 1.0000.1.8500
14 dict begin/FontName /YuGothic-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid2 put
dup 34 /gid3 put
dup 35 /gid4 put
dup 36 /gid5 put
dup 37 /gid6 put
dup 38 /gid1 put
dup 39 /gid7 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -872 1 index div -637 2 index div 2439 3 index div 2675 5 -1 roll div]cvx def
/sfnts [<




25B00A25B00826B0762B8AB0005458051B0459B00525B00726B0772BB00625B00626B00625B00626B0762B08B0772B2D2CB00725B00A25B00A25B00826B0762B8A8A08B00425B00626B0772BB00525B00526B00525B00526B0762BB0005458051B0459B0772B2D2CB00825B00B25B00B25B00926B0762BB00426B0042608B00525B00726B0772BB00625B00626B00625B00626B0762B08B0772B2D2C03B00325B003254AB00425B003254A02B00525B005264AB00526B005264AB00426638A8A63612D2CB15D0E25602BB00C2611B0052612B00A2539B0072539B00A25B00A25B00925B07C2BB00050B00B25B00825B00A25B07C2BB000505458B00725B00B2587B00425B004250BB00A2510B00925C1B00225B002250BB0072510B00625C11BB00725B00B25B00B25B9FFFF00762BB00425B004250BB00725B00A25B0772BB00A25B00825B00825B9FFFF00762BB00225B002250BB00A25B00725B0772B59B00A2546B00A254660B0082546B008254660B00625B006250BB00C25B00C25B00C2620B000505821B06A1BB06C592BB00425B004250BB00925B00925B0092620B000505821B06A1BB06C592B23B00A2546B00A25466061B0206323B0082546B00825466061B02063B1010C255458041B0559B00A262010B003253AB00626B006260BB0072620108A3AB10107265458041B0559B005262010B002253A8A8A0B232010233A2D2C23B0015458B9000040001BB940000000598AB0015458B9000040001BB94000000059B07D2B2D2C8A8A080D8AB0015458B9000040001BB94000000059B07D2B2D2C08B0015458B9000040001BB940000000590DB07D2B2D2CB00426B00426080DB00426B00426080DB07D2B2D2C200146230046B00A43B00B438A632362612D2CB0092BB006252EB005257DC5B00625B00525B0042520B000505821B06A1BB06C592BB00525B00425B0032520B000505821B06A1BB06C592B18B00825B00725B00625B00A25B06F2BB00625B00525B0042620B000505821B0661BB068592BB00525B00425B0042620B000505821B0661BB068592B54587DB0042510B00325C5B0022510B00125C5B0052621B00526211BB00626B00425B00325B00826B06F2B59B100024354587DB00225B0822BB00525B0822B20206961B00443012361B06060206961B0206120B00826B008268AB00217388A8A6120696161B00217381B2121212159182D2C4B52B1010243535A58231020013C003C1B2121592D2C23B00225B00225535820B00425583C1B3959B00160B8FFE91C592121212D2CB0022547B0022547548A20201011B001608A2012B00161B0852B2D2CB0042547B002254754232012B001612320B0062620201011B00160B00626B0852B8A8AB0852B2D2C2045B1004E2B442D2C4B51B1404F2B505B582045B1014E2B208A8A44




00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-872 -637 2439 2675}def
/UniqueID 4501635 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C980943B128E467A4B303542E85E0849534105E9F083E4E3373F14A60648F45B29C60B4D6F69B0737DF1D314843D95BE9457F64FACD5239FA407B8228F6DEC41596BF10FDB3EA552F213AD80F017DC555A7E2E318048CEBCFE92137EB302E7F81B09AEF3C89D48792431BB458706402773CBF84A60ABE71C87BFBAD569C817575A66677C828AF277DE6F59FBE46AE219C1E94EBB920AC12801ADBE17ED2FC84D27F18ACA5617A18CAFF85CED40E5BD2C958DA329F6C369B0799FCA8613F1245441A8975CE3E60D21D59A4043EAAD6336A95EA5EE143D84CB310B2F6B593A06FEC4336C008080D6A9885696B2E21D102BDC3B6ED2C6CA244A6743545F3DDB8DC5D08CBDB63C5F28219B020FA8463182475AA0A25D3605BA2AD6254C6C16492A0698412F3DD7F42E2AC7F5F1D8F3EC5F053851B5B2B349BB5E12DF5E3FB984E0CD4BC98B873FA8D1E4621748F6640434BF63C5FCE6970DDEB61C56F27F369B5927311DFCA6429912A1BDE636F6ECD7B68B2496D045D80C9FE701E87BF8C6FAE9273BBA4006A09E91B6394D975765567DF6F2F94980D36C75F527787262C748C12F3BCE4CDC08344C261E5D39371606F5365CB63D803ADDE37140653F89C091E2AB4F3744E683FE05EA6C89E8C57D376665CC755B9E7ED2A83A8CCA13B709F20724580B625EF4A6C4E472325AE86BBBFD2DD141C3502CB7EC031307A272049147A4FCA1CF2D43F73F1ADF23F8088790F9BB0838DB445817E6686F80EDF5B27707FD7E4
E7C0F538955A9A5ED576654BD4B4211D8098BE00B9F89FFB1565F214A625C3D3B5C531C3A1D657A77D5616A7CEB4E6A93827DEF2DC71C85486854EF799A8F751F932F75835685D0562565EF115FA1DA755699E8870EA304A84BB1FCA52453F458F06399789F7A2EE42406567AB4B16714F6C87332E31A5A64FB2D025D341CF68E8682349278C8DDCA60B99B04996E21E3228DB98606ABC30A3C6596DD0FCBB7EFCD6F6D8785D0697204A8C8036552DA5704F163AF3AB19BC8D9663D6EBF0DE98B5F7F6E4AA91EB37610687021A642BE3BFED4EEB72DD19F69E7554E248B985A790A33746C7B790EAFACC0354EC66F336B5F17FEAC36D7C71E1B0A251CC6F8D1388DE7B7E2A52FB32127BD43B0C480B781183CCFCD0AC4C76073F9AA78653920A681758DCFAF2134DD3FDF6ADDBB146AFEC82FC74308504FCC622AB938CBA05A0A1EBD45803BAB250EFC5B9B6D8A28479832356FE9C4AA5CBBB7E6E00E7EAFEF7C0FDC073685816583A345A8BCA0C5157C41C64E850D76DFE08F22748D5B6EA832CE40459E5AB475EE58C13778CA92C904464FC12DB17C0067FFEAD7CABC0BC3E23DCE3034D574F2CCA5E39162C7EB8F97143FAE3C0175B62EE7F4749E1C94B6DDD055EE53465F4E8A638D6BDD9903B1C8F05DA26E7FC53D9136860A416E83CFBE4173A253277B875ED9CB1897883165D4F796B1682C15F785FEF096FD643973F03352332E1F083C9B2E9E650B57F3F6951AC1872198A79DEDC654695B78FFE60CF0E3A14D1E4D2822604B02D44F22D01C67553045811B367497A3891DACB038623083353568DF861
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YuGothic-Bold cguidfix
/F1.1/YuGothic-Bold renmfont
%RBIBeginFontSubset: YuGothic-Regular
%!FontType1-1.0: YuGothic-Regular 1.0000.1.8500
14 dict begin/FontName /YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid6 put
dup 34 /gid22 put
dup 35 /gid19 put
dup 36 /gid24 put
dup 37 /gid1 put
dup 38 /gid7 put
dup 39 /gid14 put
dup 40 /gid15 put
dup 41 /gid10 put
dup 42 /gid20 put
dup 43 /gid13 put
dup 44 /gid2 put
dup 45 /gid12 put
dup 46 /gid16 put
dup 47 /gid4 put
dup 48 /gid8 put
dup 49 /gid11 put
dup 50 /gid18 put
dup 51 /gid17 put
dup 52 /gid3 put
dup 53 /gid21 put
dup 54 /gid5 put
dup 55 /gid9 put
dup 56 /gid23 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000002766670676D000000000000031400000E82676C7966000000000000119800000AEE686561640000000000001C8800000036686865610000000000001CC000000024686D74780000000000001CE4000000646C6F63610000000000001D48000000346D6178700000000000001D7C00000020707265700000000000001D9C0000042E061D061D0602001D05E9001B042D0019002DFFE3002DFFE7002DFFE5FEBAFEBA060200000000001000000083008700740074007F00650065006000870075006D007F007F00BC006700BF004300740060005600850080007001090074010A0070005D0054007700CD004E0059007000CD002D005A006C0060007800800087008F00750068006D0073007F0085008B007100750079007F009400BC005A0065006D007300BF0043005B00600068006E0074007A008200560076007F0086008F006A006F007501090059006D0073007A010A0054005E006D0077007D008800CD0046004B005800610069006F00CA00D10116002D0057005D0066006B00730085009C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005EC00130078059A00180075059A05B200000000000000000000000000000400001800B30000FFE700000000FFE700000000FFE70000FE29FFF50000059A000DFCAEFFE900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000800086007000B60085008B00790084006C005B007000BF0073006E004C0069007C000000000000000000000000000000000000007300000000000006250000060A000005F20000043B0000002500000025000000250000FEB20000404A8959262587868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A8858575655545351504F4E4D4C4B4A49484746281F100A092C01B10B0A432343650A2D2C00B10A0B4323430B2D2C01B00643B00743650A2D2CB04F2B20B0405158214B525845441B2121591B2321B040B0042545B004254561648A63525845441B212159592D2C00B00743B006430B2D2C4B53234B515A5820458A60441B2121592D2C4B545820458A60441B2121592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2CB002435458B0462B1B21212121592D








00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
/gid18 18 def
/gid19 19 def
/gid20 20 def
/gid21 21 def
/gid22 22 def
/gid23 23 def
/gid24 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-840 -619 2378 2642}def
/UniqueID 4095570 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926774C520A180165F2668824383C2FD0BBD585551A6494A5974E808807DA9A506B9DE2597AD26E8685651847B9366156EA37EB019C383662D2E6EA41ED75AB7E1597F8C75C858BA908BFF810F43170BFBEE074BC085D170AA47815848C78095CD168851735B7AB1230EC86E64161205F7DDF5C36ECF359E3BBCF64B8632FCC4F55F3AAAA1B633F1DA29F5A8B08FA3504E48CAE2FF9417B84AC9AAA89DB53CA47AC23F46C05B313646CED56080A4D62411D653E25AC6824D1895B33B6667F72597DA88E86328C75AB49401F4FC21082D693B0B5D205B753C9AE888E43E6DA23FFC14F1152D2717F27918AE0C0703734C9ED89CA69E2868B007FE4799E83226034E5DA160A784E65FC8FA663DB333B675072DF5A74CFADAE355E1D6882DAE7583CB1B70F356FC06EC5B3A412D6BF6F63378133118B9EFAA4C9B5B03EF68EACF2E962DFCAEEBE80AFA42AC3EC57F8F0BBC9548AB5C486BD9E3EEF6583A688EACD94D246D5F85B04270DAF354028E7F1396BAF92EC08C389CE6E4183AAC26D14CDCE83C575AE71234D8236C47A3DB73ED195AE3D9BE850C090EED92A4C7A244EB170B06707A87287FC01000822521320603D9552AAD64A08FA406613E13502C4691BF0DF4C138215ACB617D5A0589E42DCD9F23AC16D29415569C7401382D012A6B5795CD62AD076F4FF55EE2FCCCC797F5029792F053B00D91DC435B21411F418CBB3841D975E9FB362A08C3E5C4E63DB1B8BF935B3941E7C26C32BE228AE375DFE8
5CDC0EA4E67F3C507CE3E9F128D9DB85ACDDE47B1CF8379B2ACF26FC4E28FBBF8AD578706590D026CB8FC442866A324FD6AC6F393C941805FD0984E223529CCC2397E1DF300A7BBDAFFBA821D514E2E917CFFEBBA86589603AD4C86A0BEEC78D3CF4FEF9871740806D25CC26C2CB2A1FE57D6387DFD49A0529884E54AD25FEA0F9F30CE1C2C755BAEEDEAA1659160EF2666832368C5C30FCACD27BAC7056CA86C8AAA4E562968FF5F52E9A06A6DD398A0C535AE741ACAAEF907D702900D9E341248B2AEBB83F1E108002F58AD8F7933A01FDEEDB18F9D39BC53FCF041E437E5FAAE46E54FC9F996E343676F465EE78F5132640FF148CC475C086F91CC48252BB2343458E1B741CF189000C79C84B2878CE8A9094BD9F86ECCC6471589218A88EDCD2717FC72AA64CD722D4060E1D1CEA3D220AA9855A731966C85EE19451FABADE45268B880D5A7C12EF82F783A52A884D6E9380902E6D44E33E7F368E010197BFBE82C0857983B3E6A4BDF77EF61621340B85C10A574E69ACC07432968588C2B33974584E245EAF8DD45E9FCEB68B4540CD9F282B46E0B80DFA296EB670FBD96C2C88F5711D7E77E6E39106700BE61A3EA97F7F48A643FB243FD16B1B008A168E347DC595406D84727FC395B1ADF003A72CD3782AC3BBF97AE7AECF6D4AC9342942279B4F52F1EBF0449106E32DEFD698A1FE851522AD60CF37C4E8AD0E0E8FA1B6095327CF1EDB70903209CE62FE5DA3BA00800123E4B66FFEBE3B07B81805B8DF37B76C15DE0E9A0A3467B14287E56F59ACA1409FFFFBB44AB70CED591BBF521E328FFF5D9A968D767A40FBB73453D13F9E842CC4C185622C8AC9FF9BD97CEEB4653F164DF4A908D06B0C1FF558BFD8FC8D196C6AA2366B5416B5BAD021E58FD2CDA25172F5493B718CF85B392391BB07F387E84F8865A03B59A8E5E08EA458E1DD45C83094DD298C936B03C3BAAB4C90340BD2A9DCB86A5A19AB0E88B701BCF67107986A78D4AB68722B88A0F3864A019B97A0E4B4960524782C688F0FE9BE22192791C7D7CDCF015541AD7D308C01B22FD6F4715ADC47047838DFB7D2525391F559A1F95B472851B05B553ED09FF0E2D906768113415ADE8AB4867167D3A352D7BCB9B146E5990F5EE5A94C7C5757FC9CA0BAF001D52AEAED29F92A066ACC1309A652EC11972D7CAB09AF2523E1E7A2EF3FD2C79EF760E41824D9869FE8D9180E1F8D4F3E79025B9249591AABE4029B7324EE2ED08E450850F55E9BAB5C651D8D5C165831716968C03292077818F4FDDDE9DDB392683D0E51C12AD9C2122C4AA0E19EE03F7F5F9D96FCD6B3DF8D7916866E70D1B193038E245C0F707475B160E5F4C0A65238DCED9D2A76AD0A23CFDF64D311BB2390D634D2AEA97E2348620C92A34A71FBC45CE50CD0587D15516A0D08A17BED26899B50714870DA1F5F

99EDD6534CFE984DF995DA9BA31C48AD00695595B1D5A3E03E4AAEF4558C5F0A7E231DAEDB3050774C4506D416ACA3F1E4803573E1F42796613AA25175A79C294FA4DF4C492DE7704489C5495D1A8465F217653E11417E10408103A5FC12ACAD5878FB1844A7FA7B14E04BED6165161450A2E749FEB543B088B8C349AE7D5AE11C8533DF878E8E6A131A4B5C53A158D4927EB1AFB8D5BC3229697880906BD591FA7F3C1DD196D74106CE329B0DD2D1B2268BE154D16235E7F8CA717DFE3C332D283FCFC334CA22782503052B0053A65F8A0F115EE64AD43E93BF9AF97DCF161888C4C24995E72D4B60EEF14A6EAFED5334391400E603D81559793A094A77B954AF485924E3AA3DD0B5F955AD50668D0D320A5EFFD636BD1B0712E2CCED27845887FF50C10B712825CCF84F19AE88F847354B4DA9E20EE3274D5ED21E81A203C3C37BD92CC88A73F697F972F41919D03ED80DD30772630CB4C88CE0911BB68D3BE328FFA3AEF584FC61CDC7B7413E33F8EB19057486EA783D02FA69C65785F976E90D92F583BE666A24D2E97A8CC5C4AEA6C206AA39FFFAC89720D6E3BE32BDFC8E1D9F6D7EDCFB2E83C8277C998AE5140458DB40B9811F08AD239D6E95F853BC00B54284E1DC91647DB350931DFDC87DE88DA27D8F97B2DECD296DD27EAA36C475AB0B2449C3E96DA86F4E7BEB13B1B8F38A0E9AAF8C4B2D0E700CA3A5412461CB738251A0484FF861FF9B7905285F87E3E9E690BBD65E2A6EE01B329AEE93ACF4B656B5940F95E7E1EE110633BC3918A45088F65B0AD5023EACCF080DF638605472E30FBC1CEA9A31AA5763306ECA0E2779F52BD84987141A35B6905297E4E38FA9250F4A84B7CD6D2A51C093B2A46372474235F07A0F4FCF5E7EEAE06109C8FE970B5DFA9875B0E61B08BB3244C0F18C610C8F9E197754E6243737B55D15F2AFB4F688
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YuGothic-Regular cguidfix
/F2.1/YuGothic-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 345 244 rc
-108.5 514.5 m
450.5 514.5 l
450.5 -268.5 l
-108.5 -268.5 l
h
-108.5 514.5 m
f
Q
6350 w
1 j
/Cs2 SC
0 0 0 sc
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 9 327 226 rc
0.00007874 0 0 -0.00007874 9.5 233.99379 cm
2234937 -12700.129 m
2234937 2809875 l
S
0 266699.88 m
4127500 266699.88 l
S
CM
9.5 234.99379 m
334.5 234.99379 l
334.5 234.32709 l
9.5 234.32709 l
h
9.5 233.6604 m
334.5 233.6604 l
334.5 232.99379 l
9.5 232.99379 l
h
f
0.00007874 0 0 -0.00007874 9.5 233.99379 cm
0 2806700 m
4127500 2806700 l
S
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 172 177 63 rc
1 0 0 1 10.25 -7 cm
/F1.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%")[ 8.499600 6.999600 4.503601 7.131601 4.755600 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 172 150 63 rc
1 0 0 1 186.22929 -7 cm
/F1.1[ 12 0 0 12 0 0]sf
0 226 m
(&#'"%)[ 8.250001 4.493999 4.494000 7.001999 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 152 177 83 rc
1 0 0 1 10.25 -27 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#)[ 6.750000 5.874001 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 9 327 226 rc
1 0 0 1 27.125 -27 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
($%&!#$%)[ 4.624800 3.376800 6.628801 6.748802 4.252800 4.624802 0.000000 ] xS
1 0 0 1 60.75 -27 cm
0 226 m
('\(\)\(*+,-)[ 6.999600 6.747601 3.495599 6.747601 6.999599 10.371599 6.747601 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 152 150 83 rc
1 0 0 1 186.22929 -27 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(&!#$%'\(\)\(*+,-)[ 6.625200 6.745199 4.249203 4.621199 3.373201 6.997204 6.745197 3.505199 6.745205 6.997204 10.381203 6.745193 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 132 177 102 rc
1 0 0 1 10.25 -47 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%.*#$%'\(\)\(*+,-)[ 6.750000 5.874001 4.254002 4.625999 3.378000 7.002001 7.001999 4.253998 4.626003 3.378002 7.001999 6.750008 3.498001 6.750008 7.002007 10.373993 6.750000 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 132 150 102 rc
1 0 0 1 186.22929 -47 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(.*#$%'\(\)\(*+,-)[ 6.999600 6.999599 4.251601 4.623600 3.375599 6.999603 6.747597 3.495598 6.747601 6.999599 10.371605 6.747597 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 112 177 102 rc
1 0 0 1 10.25 -67 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%/0!1$%2#,3#)[ 6.750000 5.874001 4.254002 4.625999 3.378000 6.246000 7.002003 6.750000 6.378002 4.625999 3.378002 6.126007 4.254005 6.750000 4.374001 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 112 150 102 rc
1 0 0 1 186.22929 -67 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(/0!1$%2#,3#)[ 6.249600 6.993600 6.753601 6.369600 4.629601 3.369598 6.129601 4.245598 6.753601 4.377594 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 92 177 102 rc
1 0 0 1 10.25 -87 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%2#,3#$%24)[ 6.750000 5.874001 4.254002 4.625999 3.378000 6.125999 4.254000 6.750000 4.374001 4.254002 4.625999 3.378002 6.126007 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 92 150 102 rc
1 0 0 1 186.22929 -87 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(2#,3#$%24)[ 6.124800 4.252801 6.748799 4.372801 4.252802 4.624800 3.376799 6.124802 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 72 177 102 rc
1 0 0 1 10.25 -107 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%2#\(.)[ 6.750000 5.874001 4.254002 4.625999 3.378000 6.125999 4.254000 6.750000 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 72 150 102 rc
1 0 0 1 186.22929 -107 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(2#\(.)[ 6.124800 4.252801 6.748799 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 52 177 102 rc
1 0 0 1 10.25 -127 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%2#,3#$%3!2!35!6)[ 6.750000 5.874001 4.254002 4.625999 3.378000 6.125999 4.254000 6.750000 4.374001 4.254002 4.625999 3.378002 4.374001 6.750000 6.126007 6.750000 4.374001 5.874001 6.750000 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 52 150 102 rc
1 0 0 1 186.22929 -127 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(2#,3#$%3!2!35!6)[ 6.124800 4.252801 6.748799 4.372801 4.252802 4.624800 3.376799 4.372803 6.748802 6.124802 6.748795 4.372803 5.872795 6.748802 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 32 177 102 rc
1 0 0 1 10.25 -147 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%,4\(3#$%0,'6-!)[ 6.750000 5.874001 4.254002 4.625999 3.378000 6.750000 7.002001 6.750000 4.374001 4.254002 4.625999 3.378002 7.001999 6.750000 7.001999 7.001999 3.125999 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 32 150 102 rc
1 0 0 1 186.22929 -147 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(,4\(3#$%0,'6-!)[ 6.750000 7.002001 6.750000 4.374002 4.253998 4.626003 3.377998 7.002003 6.750000 7.001999 7.001995 3.126007 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 12 177 102 rc
1 0 0 1 10.25 -167 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%&!#$%/3!,#!$%,//!22)[ 6.750000 5.874001 4.254002 4.625999 3.378000 6.629999 6.750000 4.254002 4.626003 3.377998 6.246002 4.373997 6.749996 6.750000 4.254005 6.750000 4.625999 3.378006 6.750000 6.246002 6.246002 6.750000 6.125999 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 12 150 102 rc
1 0 0 1 186.22929 -167 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(&!#$%/3!,#!$%,//!22)[ 6.625200 6.745199 4.249203 4.621199 3.373201 6.253201 4.381199 6.745201 6.745201 4.249203 6.745201 4.621201 3.373207 6.745193 6.253204 6.253204 6.745193 6.121201 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 9 177 85 rc
1 0 0 1 10.25 -187 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%0,'6-!$%673#8$%+!#,6,#,)[ 6.750000 5.874001 4.254002 4.625999 3.378000 7.002001 6.750000 7.002003 7.001999 3.125999 6.750000 4.625996 3.378006 7.001999 3.125999 4.374001 4.254005 5.874001 4.625999 3.377998 10.374001 6.750000 4.253998 6.749992 7.002014 6.750000 4.253998 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 9 150 85 rc
1 0 0 1 186.22929 -187 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(0,'6-!$%673#8$%+!#,6,#,)[ 6.999600 6.747601 6.999600 6.999601 3.123600 6.747601 4.623600 3.375599 6.999599 3.123596 4.371605 4.251602 5.871597 4.623596 3.375603 10.371605 6.747597 4.251595 6.747604 6.999603 6.747604 4.251595 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
9 9 177 65 rc
1 0 0 1 10.25 -207 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(!"#$%0,'6-!$%673#8$%2*.!3)[ 6.750000 5.874001 4.254002 4.625999 3.378000 7.002001 6.750000 7.002003 7.001999 3.125999 6.750000 4.625996 3.378006 7.001999 3.125999 4.374001 4.254005 5.874001 4.625999 3.377998 6.125999 7.001999 7.001999 6.750008 0.000000 ] xS
Q
q
9 235 m
336 235 l
336 9 l
9 9 l
h
9 235 m
W
185 9 150 65 rc
1 0 0 1 186.22929 -207 cm
/F2.1[ 12 0 0 12 0 0]sf
0 226 m
(0,'6-!$%673#8$%2*.!3)[ 6.999600 6.747601 6.999600 6.999601 3.123600 6.747601 4.623600 3.375599 6.999599 3.123596 4.371605 4.251602 5.871597 4.623596 3.375603 6.123604 6.999603 6.999603 6.747604 0.000000 ] xS
ep
end
