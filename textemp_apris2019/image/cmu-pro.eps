%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 269.000000 131.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 269 131
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 269 131
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YuGothic-Regular
%!FontType1-1.0: YuGothic-Regular 1.0000.1.8500
14 dict begin/FontName /YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid3 put
dup 34 /gid6 put
dup 35 /gid9 put
dup 36 /gid2 put
dup 37 /gid8 put
dup 38 /gid4 put
dup 39 /gid5 put
dup 40 /gid20 put
dup 41 /gid21 put
dup 42 /gid19 put
dup 43 /gid22 put
dup 44 /gid13 put
dup 45 /gid12 put
dup 46 /gid1 put
dup 47 /gid17 put
dup 48 /gid23 put
dup 49 /gid14 put
dup 50 /gid7 put
dup 51 /gid11 put
dup 52 /gid15 put
dup 53 /gid18 put
dup 54 /gid10 put
dup 55 /gid16 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<








2B2B2B2B002B2B002B2B002B2B002B2B2B2B2B2B002B2B002B2B2B2B2B2B002B002B2B2B012B012B012B012B012B012B2B002B002B012B012B2B002B002B2B012B2B012B2B2B2B002B2B2B012B2B2B2B2B002B2B2B2B2B2B2B012B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B012B2B2B2B2B002B2B2B2B2B2B2B2B2B012B2B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B7374752B2B2B2B2B732B012B0075737374752B2B2B012B2B002B2B2B2B012B002B2B2B2B2B012B002B180000
00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
/gid18 18 def
/gid19 19 def
/gid20 20 def
/gid21 21 def
/gid22 22 def
/gid23 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-840 -619 2378 2642}def
/UniqueID 4095570 def
currentdict currentfile eexec

7D68E5495D74A0663130E9455DC06413CC0636847156C2E42BC29B3EE60F5439110F6062903A3565F9CAB98C7FF3B68D016B57986BF51A32BE64DDFAE7FC7E433448AAF2C3DF998BE39F05ADF770BEA0E137B063A63E591682F280CBE6C555DE85BC7ABC7B926CCE901683377B382D5EFF754270DAF354028E7F139240C641B74BB32148233E4E6C03A850D963C789F45F7F1C38E981141A3387E079875E661F4F3F0BBB450C3B63C96CABB0BEAA635169CBB6B8E437BB3573FC0F58F02E1D9933C30F4E0C6E42DF24A67BF9B0C54B2363BA44E38416BF3F586A86B58DA39079B616A7663DE400C966B761FFA5BC08F816666341E81E19CF9E5D735B06D2D26B33D07AB8FCE9AFF147527AA06E6B0FB09C0DA3D465EBC7C946281EAAF60544C31A71BA305E6209B6F65860188A18BA9484177FBB9F06B08E38ED0A1DD92E58F653E27F0AE061F6300A649E1AE2B84B9ADDEFA8DC480908FE95C42229EFF281D7C66DD8DDB2CC140890D29454FC3DEB26F32217A1A16C92E9185FC79A488A10D18ADC65F42BCE9BE49ACE81D17365565267E0175AC8026EBAC10A31EDCA408337F09192E7C66A168A9F5E1EB2A03B4195A549F9C26285F6FF7BA4961BA2B171288AD3798576AAA30F22003A97B5928D3BFD5DF2BE9624B69FD2EA8F42105B07EFE65C8C726A4B93C567A31D17AB29EDB5DBE303DD9335D64B7C7AD07FEDAA238093EF42EE998EFCC09BE7430E4A1A89DB886D0EDCC2165C8E368B0DE3C6BD22072B89BD6B9BDE955A0828C7576670DB542DADACFF6BDE0A7CB85B84EF072AD82209462DA5AF85272D56C1221B44EE1C1A366F68343E290B15FBDE7FCAF6E0DF795A239F2C619B8F9E14CA5BDEED721025C663881AA2C56613FB320AF557FC64D4187787DE569784B37EA24D6AD2D15769AFFD9F0C550BF2E9D8B7D25185E28CEDD5BBC6863ECCFDE8585C105E9794BDA34ECC78EE76A22E7165839B78BC61773C0DF45C3C6F7F83DFD8BE824B55650F2817B1A7655CF02B83CCB8DF2A7246EC5D68EA21CCA33A8704091FE3E5A0B311CA3E201069C28B6888976CB791D3BFE8243BB60557DF19E93252901645F627A0FB7EA024DB5003A756BE88516151959659586E2B9A1739526A40F01BB17A524069E09CAFBF08D6CE4F33D2ACE25A7B006F69640CDED0DEE9F1059FAAD4AFD9D9731BED573196794A81B97FE8B39FEAA384254FDA4A6BAD4BED1EB5CBB818DA3C6DF9B5496A22AAF9D1E53E2251EA895479E63A6EAD6901755EEEEEEEA6E83CF83426DD611F15FBC3CABCA1B7335F0D228D8B4270E7355023A014D0C7BCCCED1AFE0DFB8505E97E34139EDB5FC5AA62723A2088D6106CF561ABA4715E04B8799214846F148F3ABEB6D8B3701FD52570F2877E41C541E3934D6B5296D41F93AD3365EA3D210948250D638EC195E817B7FF1E

86499AABEFA3EC9C9D7E7404FB76B78136C75CCC59038F2855FD7951AA3C0F3678AD9CEC411BF6C6DDC4D7F3DDF5DD50BAAAC8B0732EA8D1168889AE74027C644D8490A59FEFE91929BD7E035DA7C99257F7E82A9F1C02071DD2F37E261828AD3195C7CEAB406065F89473CAC625937ADA827F8495A473D9C01E2B9A68EE50CCE12E0C12190C77693E369D4FC8FF49E1C3ECBDF188D293D7BFC23D2CF3299474298534C6F0811E2D260F04C90731DED730B4CA1475FB824E17D953F47110CC82CB4A91756D0B7115AA4F1C2E3CC3B77E4874CD15AF13B8919F5034C995E07EDF5D0DE6BBEB9B2E94E8C27C2C50D4036B3780037433A05798CA7C837D06E34ED6B1BD6EFF2D398E0B13453210D948B6A28E525576C486925A3F03B2EBFAE39233C0FEE4215AEB803E6625EED10277EFD4CA6127D080C8613D2CA3054AF22EFDFA81D21031FE8BC2F68B64BD836C2AE69D3F311C809ACB2E5FA1F17ADC5FF4D1C4D426EF6EB8074BB37BE50A7729510CE7E0CFDA68580204FEE538343D46C3F7274AF9844B459764FC3D592E53224B79CAC13D4638D3A4FB1A90D67C42EA946F5531C512B8B185A5DF2507926A96274ECEA89C825A017DCC2F6F7AF779126BE4DBC70327D7B6F1290723D7A37CC8148CE41CCD882F9A8CCF350DEB968132E9F13F77BF7D60
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YuGothic-Regular cguidfix
/F1.1/YuGothic-Regular renmfont
%RBIBeginFontSubset: Monaco
%!FontType1-1.0: Monaco 1.0000.2.0000
14 dict begin/FontName /Monaco def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /period put
dup 35 /one put
dup 36 /four put
dup 37 /five put
dup 38 /three put
dup 39 /eight put
dup 40 /two put
dup 41 /nine put
dup 42 /F put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1249 1 index div -862 2 index div 1647 3 index div 2504 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/period 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/five 7 def
/eight 8 def
/nine 9 def
/F 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1249 -862 1647 2504}def
/UniqueID 4508934 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B5BF8E443649147905228038171EB73F3E0B647FF27DF9EB6CBB52D184194DC83C1FA8CC47DA20CB47DC9E3D5D59CAE52BCEB510AC4660431A0132EEE97CDA8AE404E43BE6BD4FD42969C2AF7905957AFAA5C53DF334B8FB86790556B932DB6C1134D0983EF1DA3959F3C37D6FBEE61AE9F3D9296A2EB51088D999FBE5F2FE8EDCE9BAC28A3D68216CC5FCB0CA3200DFC720E89D9753354DA826D67E95F680B2CB103219956A597AAD48932BE1A76993E655F71968CDF34979512D7F22E680180746329EE04CA22CB097DE4A41C17F18A753B898E88A8F2C772CDDE1ED735CFD23ED160BE24679EE21ABB4863E99164B13569667E9EFEF3E6BCA6FFBE08BD3AEC4489F5A0ECBD85BBDC07876F59650FC0A7CD8497CDF958FEF51C621AA28B3EB3EDCB26A02BE42F319DD0BDA2BF33FA7210F5588FB9BA3067281067251BBAC51F83B1B427E76C7A91006BA4CA6AA68CECD52008556CA34ACD65980AF2E523FCBF7549DA479A00844490E670E3F98168A3B2FB2056B60165B05F1692B1AE475D059118718601F7AE90421A4D70523072AE09BFCBF7A107B5F9A84F29DD9089768CF2178217811BD8F33AEB57F2FCCA4D846B61C44280140B3E9AB7606D219D08F0E53C52809F102314BB5A503EECFD580F561D4A2CAE5AE3F057D03948C8BBA676CE3572A5AA45D8A2B3CD53E4E9A7C4E74DA705CF1EB0A64EF0894D436FA9FBCA7F53551E3444A5E937EBBD36BD1DFD804702A781960876E3B9536F382D0D4E9
7DF8A532F6C509EBD41979892886EC4446089F9C1E150ACA61C9AA96FEF3DD889E06A36DEDCEB7FE3C87EBFABDDFA48F750D0CC922D603E5882E3F7156980B8AC071FBA3336B96B2711CFF65D81AB6AD6717AFD1C371C5F4B21322D9833285C3B5B485A62AF5BC60FBA8BAA22705B7CA27DE368411E4246FF688FDE9FB2B9AB7D2911C9239DC252EEA9A74FE7E1D5BB288148A6DEB0499B63B4F5C15E7CE59FBC4AE132CDF628173790B689271920E413297EE3AD4366F4EDEF558A78B77600F4C173EC1EC51317CE881E1DDDEBC4A527C8AE5BF2FFB32ACACB757FE56130466649AF98B3E20453D5A73CF931844992BA81BBA5247390558CD09C96996D2E202AC44F951EC413AEFE5E32915A30681CA7F50C87280B6C3600909E5CF4CD0EFA13EA6EDB5FCC1393BA7BE9C8B7616E19B96A17B45832FC956F226A88B207A23F6B3BF11143ACF6A1B731B6C46F6C1ED4034F112052CE17ED33FE295AAD8407994BFBB3D121142E776CBC0F5AC5EEEF7C3FE29D7BA3FA4D5478D475D5FCC028DA68BB2CB900D81E303C44FAC213378D1A0E3E7A126CEBFF20D367A8E4E6E7F1E8FD9B08CD61E132AC276E49B73A3086AC4DF2AAE637259C58504D565798055ADD20D96C557AFA9BE5F285B916BAB576577753679C77EDAB8006A127A8E08701AE58A245BBF17165884CDC1DC5D77FB8E7D6D652C9398628C380CC84FAA10565729AE2EA7D1114493DDD1A71CEF864B422AED456B3F4F7B3BBC7282625DCBAEF77D819E3C8DFD32AD723438FE77EF6A35FF1E2C8702D068F189E9BFFCCA39FED5983E20B2A6AB7CCAA9C0B580BB7FC739EDD43E39A8B4B0DE2A03D6D8F4EFDA5EB9B341B192ED2749A3A83846B8D78BF486805D435F2F70614F1E91CF6A42606AFE81C66AEA52A4E31C8ECE72BB4EB0A2EB411C7B1F8FB9B37EEBABE9B799405A227530551B5E625E545B59F9E0E271AAF75E03669BBA58D5A6B451B4DAF877489A9F3BEBD70F83467F8978C7D471E59F4A781B3C30A3A81A8B2C348A12291A3F7DFB0ACD3BA18A7C630CF738A3791FC45C609705390EE4199A7716F11469D612466E3F663453AE3BC57E133EEBFBF5D7F78A713DC2B6307AFE922253E479C744717A0B4AF9879EA3AD301E4D2642D1BFFE5AF596598C75EE0E195ED36E1F1257AB71FB0A7316E1343FD4E929DDE1D8D8491D9DFDA67E83569D3C32FC17CF2F682E7CF64382C7557776A842AFA810A5F376BCB9FF602F887854F7B25C9EA15724455FC69B3065A90EADA0EF7C4F4040A15F2FB3B0377090EA39BCF6015311314EB54A2B6947B7015DA0F19643088ED6A42B6D1456E2675745BC2C6834AFD33F47E1000CE557210E1699AE0DE08C966A828B5AC03F950AE4ED38ADD7DB00F00D92D079401C0AF20792256E959648C520BB26367A22B50907A44BF98A5B37DEC1A751

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Monaco cguidfix
/F2.1/Monaco renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 269 131 rc
-223.5 298.5 m
335.5 298.5 l
335.5 -484.5 l
-223.5 -484.5 l
h
-223.5 298.5 m
f
Q
6350 w
1 j
/Cs2 SC
0 0 0 sc
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
9 10 250 112 rc
0.00007874 0 0 -0.00007874 9 121.58749 cm
876300 179704.97 m
876300 1224280 l
S
CM
15 107.43748 m
253 107.43748 l
253 106.77081 l
15 106.77081 l
h
15 106.10415 m
253 106.10415 l
253 105.43748 l
15 105.43748 l
h
f
0.00007874 0 0 -0.00007874 9 121.58749 cm
76200 459104.97 m
3098800 459104.97 l
S
76200 1221105 m
3098800 1221105 l
S
1 0 0 1 89.625008 -20 cm
/F1.1[ 12 0 0 12 0 0]sf
0 112 m
(!"#)[ 8.125200 11.005201 0.000000 ] xS
1 0 0 1 117.62501 -20 cm
0 112 m
($)s
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
78 45 64 77 rc
1 0 0 1 122.87501 -20 cm
/F1.1[ 12 0 0 12 0 0]sf
0 112 m
(%&')[ 7.500000 7.380000 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
142 45 111 77 rc
1 0 0 1 155 -20 cm
/F1.1[ 12 0 0 12 0 0]sf
0 112 m
(\(\)*\(*+,-./,01*-)[ 6.999600 4.371600 6.747601 6.999601 6.747597 6.123598 6.747601 6.999603 3.375599 10.371601 6.747597 4.251602 6.999603 6.747604 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
15 24 63 98 rc
1 0 0 1 15.75 -41 cm
/F1.1[ 12 0 0 12 0 0]sf
0 112 m
(2\),34+4*5)[ 7.874401 4.370400 6.746399 6.254402 3.122398 6.122402 3.122398 6.746403 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
78 33 64 85 rc
1 0 0 1 105.25 -41 cm
/F2.1[ 10 0 0 10 0 0]sf
0 112 m
(!"#$%%)[ 6.000000 6.000000 6.000000 6.000000 6.000002 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
142 33 111 85 rc
1 0 0 1 216.25 -41 cm
/F2.1[ 10 0 0 10 0 0]sf
0 112 m
(!"!&'#)[ 6.000000 6.000000 6.000000 6.000000 6.000002 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
15 10 63 96 rc
1 0 0 1 15.75 -61 cm
/F1.1[ 12 0 0 12 0 0]sf
0 112 m
(\),3677)[ 4.375200 6.751201 6.247199 6.751202 3.127197 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
78 13 64 85 rc
1 0 0 1 105.25 -61 cm
/F2.1[ 10 0 0 10 0 0]sf
0 112 m
(!"#\(&\))[ 6.000000 6.000000 6.000000 6.000000 6.000002 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
142 13 111 85 rc
1 0 0 1 216.25 -61 cm
/F2.1[ 10 0 0 10 0 0]sf
0 112 m
(!"!%\(!)[ 6.000000 6.000000 6.000000 6.000000 6.000002 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
15 10 63 68 rc
1 0 0 1 15.75 -81 cm
/F2.1[ 10 0 0 10 0 0]sf
0 112 m
(*#)[ 6.000000 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
78 10 64 68 rc
1 0 0 1 105.25 -81 cm
/F2.1[ 10 0 0 10 0 0]sf
0 112 m
(!"#&&')[ 6.000000 6.000000 6.000000 6.000000 6.000002 0.000000 ] xS
Q
q
9.3359375 121.79688 m
259.33594 121.79688 l
259.33594 9.796875 l
9.3359375 9.796875 l
h
9.3359375 121.79688 m
W
142 10 111 68 rc
1 0 0 1 216.25 -81 cm
/F2.1[ 10 0 0 10 0 0]sf
0 112 m
(!"!$$!)[ 6.000000 6.000000 6.000000 6.000000 6.000002 0.000000 ] xS
ep
end
