%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 477.000000 421.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 477 421
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 477 421
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YuGothic-Regular
%!FontType1-1.0: YuGothic-Regular 1.0000.1.6200
14 dict begin/FontName /YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid5 put
dup 34 /gid3 put
dup 35 /gid1 put
dup 36 /gid4 put
dup 37 /gid2 put
dup 38 /gid32 put
dup 39 /gid34 put
dup 40 /gid33 put
dup 41 /gid31 put
dup 42 /gid10 put
dup 43 /gid28 put
dup 44 /gid24 put
dup 45 /gid30 put
dup 46 /gid12 put
dup 47 /gid19 put
dup 48 /gid20 put
dup 49 /gid15 put
dup 50 /gid25 put
dup 51 /gid22 put
dup 52 /gid6 put
dup 53 /gid17 put
dup 54 /gid21 put
dup 55 /gid8 put
dup 56 /gid13 put
dup 57 /gid16 put
dup 58 /gid23 put
dup 59 /gid7 put
dup 60 /gid26 put
dup 61 /gid9 put
dup 62 /gid27 put
dup 63 /gid14 put
dup 64 /gid11 put
dup 65 /gid29 put
dup 66 /gid18 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<



25B00425B9FFC00002173859595921212121212121212D2CB00425B0032587B00325B003258A20B000505821B0651BB068592B64B00425B0042506B00425B0042549202063B00325206351B1000325545B5821212321071B2063B0022520636120B0532B8A63B00525B0052587B00425B004264AB00050586559B00426200146230046B00526200146230046B0001600B000234801B00023480020B0012348B00223480120B0012348B002234823B2020001082338B2020001092338B1020107B00116592D2C23100D0C8A63238A636064B940000400635058B000381B3C592D2CB00625B00925B00925B00726B0762B23B0005458051B0459B00425B00626B0772BB00525B00526B00525B00526B0762BB0005458051B0459B0772B2D2CB00725B00A25B00A25B00826B0762B8AB0005458051B0459B00525B00726B0772BB00625B00626B00625B00626B0762B08B0772B2D2CB00725B00A25B00A25B00826B0762B8A8A08B00425B00626B0772BB00525B00526B00525B00526B0762BB0005458051B0459B0772B2D2CB00825B00B25B00B25B00926B0762BB00426B0042608B00525B00726B0772BB00625B00626B00625B00626B0762B08B0772B2D2C03B00325B003254AB00425B003254A02B00525B005264AB00526B005264AB00426638A8A63612D2CB15D0E25602BB00C2611B0052612B00A2539B0072539B00A25B00A25B00925B07C2BB00050B00B25B00825B00A25B07C2BB000505458B00725B00B2587B00425B004250BB00A2510B00925C1B00225B002250BB0072510B00625C11BB00725B00B25B00B25B9FFFF00762BB00425B004250BB00725B00A25B0772BB00A25B00825B00825B9FFFF00762BB00225B002250BB00A25B00725B0772B59B00A2546B00A254660B0082546B008254660B00625B006250BB00C25B00C25B00C2620B000505821B06A1BB06C592BB00425B004250BB00925B00925B0092620B000505821B06A1BB06C592B23B00A2546B00A25466061B0206323B0082546B00825466061B02063B1010C255458041B0559B00A262010B003253AB00626B006260BB0072620108A3AB10107265458041B0559B005262010B002253A8A8A0B232010233A2D2C23B0015458B9000040001BB940000000598AB0015458B9000040001BB94000000059B07D2B2D2C8A8A080D8AB0015458B9000040001BB94000000059B07D2B2D2C08B0015458B9000040001BB940000000590DB07D2B2D2CB00426B00426080DB00426B00426080DB07D2B2D2C200146230046B00A43B00B438A632362612D2CB0092BB006252EB005257DC5B00625B00525B0042520B000505821B06A1BB06C592BB00525B00425B0032520B000505821B06A1BB06C592B18B00825B00725B00625B00A25B06F2BB00625B00525B0042620B000505821B0






00000000000000000000000000000023080000CD037B00A405F600E704DD00E7025600E7050800600477008504A400CD0421008504A0008B0477008B02C3004C0462006604A400CD021900AE025A0023043D00CD021900CD06E300CD04A400CD047D008B04A400CD02E900CD0412007502D1005004A600C703E9004E0635005003E9004E03F0004C030E01580800003D080000370800008B080000520000003200450077009A00AD00C90120016501A301E70230026302F7032503420370039B03AE03F50421045F04A304CA051E0552058405AA05ED06260666067807E109080A610B0D000100000023025A001F0050000400020010002F008A0000038F0E8200030001BD011B01100032001F0128010E40121B1FE933E855E801CB55E733CB55E6CBFF1FBD0118011000FF001F01150112400E801FE133E055CFCCFF1FCECBFF1F410A01140110002E001F011301120055001F0112010E402C481FDB33DA55CD01CB55CC33CB551BCB2BCB5BCB8BCB9BCB054BCB7BCB8BCBBBCBEBCB050BCB3BCBDBCB0380BE01110001004F01100001010F010E40FF551FE448E3552FE301DE33DD55D901D755D833D755CA01C855C933C8550BC81BC84BC85BC88BC89BC8064BC85BC88BC89BC8CBC8DBC8069BC8DBC8027F39101F7E39181F7D3A931F7C3AFF1F7B3AAB1F7A39931F7939FF1F7838FF1F77370F1F7637FF1F7537CD1F7436FF1F7336931F7235801F7135FF1F7034FF1F6F34AB1F6E33FF1F6D2F2B1F6C32AB1F6B32FF1F6A2FFF1F6930FF1F6831FF1F672EFF1F662D801F652DFF1F642DAB1F632D261F622CFF1F612BCD1F602BFF1F5F2BAB1F5E29721F5D29FF1F5C2AFF1F5B2A671F5A28FF1F5926671F5826FF1F5726CD1F5626671F5527801F5427FF1F5327CD1F5225FF1F5124FF1F50234A1F4F238040D01F4E23FF1F4D234F1F4C22FF1F4B21311F4A21FF1F4921AB1F4821671F47214A1F4620561F4520AB1F4420FF1F431FAB1F421FFF1F411FCD1F401EFF1F3F1D801F3E1DFF1F3D1D931F3C1D451F3B1CFF1F3A39361F36341F1F35344F1F322F801F3130721F302F361F2A29CD1F2726341F26241B195C251B1F1F241A0C1F23041A195C2219111F2119FF1F202518165C1F18931F1E0317165C1D16FF1F1C161B1F1B3219275B183616375B1A3219275B173616375B15193C16815A1340125511FF105512881088200D2331460D220C55B8FFE0400905233146052204550CB80138B4FF890C8804B80130400DFF890488200B2931460B280A55B8FFE0400907293146072806550EB8013AB4FF890E880AB80136B4FF890A8806B80132B43289068800B8012C400DFF890088200923314609220855B8FFE04009032331460322025508B80134B4FF89088802B8012EB3FF890288410F0138008801300088013A008801360088013200

00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
/gid18 18 def
/gid19 19 def
/gid20 20 def
/gid21 21 def
/gid22 22 def
/gid23 23 def
/gid24 24 def
/gid25 25 def
/gid26 26 def
/gid27 27 def
/gid28 28 def
/gid29 29 def
/gid30 30 def
/gid31 31 def
/gid32 32 def
/gid33 33 def
/gid34 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-840 -619 2378 2642}def
/UniqueID 4360755 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93142184C9D9AF35B09B9B2CFE320E80E6018C5839BB77E6DFC734C68DA61B48FDAF515DA02A3B5EB5C925DDAC4FD87B04ACB311538EA97A1D79D2572226B6C8D9DE354CA441C87D230CC569A2BAD8AD5D8B61B7CCA9F9756566D8F45CE3EE1C10379CFB6EEB9D81330EA0022A34B17074BDB1596E1F6FE13A4A7CCE6229CDB76B5D19928271158C23AC8884DEA03256FDE2FB13FF7993C61F9FA08791170AB982296DE59A320C1F1A774F3F6A73A7DACDACF26F5779269088FA2319954205899320CEB3F801A337290ACDC5590BAE4EC445EF159811AF6161287FDA8E86D24E8C1065C0965D2093F03A3EB6DF7E9DBB7203B4E5D9C8BF468A583E61DF60E228C6FFCF8C8DFFDDDD33AA5921AA245105BBD1356E1FF4355C1514A29561148C58042D37A53967078DD85FA299C1D2F303D0D2E095E12ACBE60AECEF978BF465EE67845910D322F98AA58F4D8C4BE7849238027680F0CB411591E16B8B11EB7C97B8D5C049748DA4C005528562583E8EB50ED83FF20643C1AB6FBD9A0F9887496EA11D6DA1791DC5365712BCFC8BFD224E39F552038852F40ED5396F04FBA9C5FF5AF12DAEE5B01E6396CF06D8E07F3E247073EFE931440CA245B4FB4C7DB8CFBBD323B1F7BFC573BBA0C909110D664D4C00F641F90A99294ACB3EB009D97819039DF857D5B38203678EFACCF1575986DFBB7F18D43DA843228CBEECB87FFA131B98BA4B9C86CABA572B456FFBFECC8EA499A31B698645C5D88F532DBA578C38BC82
BD159312C70FE7F27732D4C197FFCC3FFB1B0A9F57D384497EC64504EFAC7BFE6A0B32ED9B316354081D4535EA769FE35AECD5ADF57B06A7225901983BBE4D34746B5B5042EE9ACB0F11C2E6C0BA5E8A2566C15BC881D47C361854BC0C21C542B3DD9153534971A029BEE60DE279D387442F45E5631DA7A3B726521F75D83BD83563DCCBA697BA5E281997502C72DC9699A0E9D368615F89369909906546F01969AEC25DBD9667A22102CBC497420B37A40D236901D1D269D53E490ED94DDF2FCFFFAA0210F77CB16617AAE3597CDDE3C8E4850082C47E8053C13DE061DAF203A29DFAB1A7975F565399693C2BD7EE95CC3BB4128837E3469DC84FFD64150F8CED4CF39EC5681989FB294F3F767667C196B852FDB631140EAD775B95C4C8F9795EECFCF87C5B31EA19E4F0E15A8FD8B23C54FCDC73546E37FD01A4AE173E56915C623C8E8E1DBBA460FF3801BD989BD83169AFA864DEBF352717F0CDE51B2D379F646919ED0202D015781D02220CBD766664F88B1E89A910C733F46F3CA0A935D6442EB7019E6ABD52AD5602544BE586DF13464BA87462EF9119BA1BF3FE7B97B33C74763F1AED70096E70F09963E087483ECFA57564EB452E88E8124439BB9DBE67438149BDDD1499FBF23D6CBEE7149C70850DEBFA80167815D141CF1C86CB055D864236A996AB4073F6725AF7D6D8D8E361873742539EE03027D9D7CEB7CE010132B3459D64FDE0D8F10845CC23C833F7CC3D7E9F745DA8F8F50D399A67C811AEFA4C791DAC087799DF7B568A43FDDA272B758F93BFC33074554803434B3810B0A11EFACC7814562116ADADA9DFD1BF2B17CE4192150B42EE3A1112FABA0DE5B62F2F67FB9100DBC8DBABC485E82EF625BC281516D51120CC69D20951FA7EB40DA580A176E23085603721E0E6BBCA0ADCC9488BAA12F2B557B607DBA1AD737DBE3C772E9F26AEF2A7A5205F40DAF57237F7FD5A5DF5175882D8A3053C0749E07A26D312D00D42FA510C36176BD2D7F3E9E566D8EE1E98D7F97CADD2AE15E8D5FD7E3552A19F453F5C7EEBFEB7CF25965CA7B5129CCFA1EC685275F4B9C346D6D7D6CA11A6AD57BB122F95492B950FABD670E326EF78AB06E7298ADF1FAE813E339FB042A792AA0D21D9E1B18C4FADDEC1468A1AF95131B9CC49903BDBBBC4016ED1C39362E3D5A81C5B68C27292EBAEB1FC52C30CEA6FB68AE13785A0524F65177E0247F52FD967E0C175805301475B349641036CE2D8352557DB14B58A24C45F44E2866DBBD82D3CB18C382B76ED3B4DC227DD69A9472259E7BDDC46F94B6531C06CAA226A91FF5273400EF89520CA6BF30591A6C3AD58A266C57AAC78EC6B213BD7A37C87EBE8901966CB964CC04BC4A2D96C0A7330D895CA2FF68E169D166FE8A1BB10E905ECC36692FD6CACB8D3A9C829223E08DC998B88BF4BC72AC7
F1E0E1896FE4A7410057097FEE65A73C270149A0ABDED1544CC8253F61CE8D67CFFB97A442A8CE96A7820B890020C2605B3E8BD1700CA51E44DF28B5485131F66806E84DBDB9F912026076CB4851F74DE95AA1CDAAAD554DDBB0E41F161F4612F37D9A9BFE1A6FA1A3D0E48B30BC6C9D41A46B3490211C412A5D679C33F332922593642C969F4D2015FF9403BC18E9CE3528EFB803EBE0E5B190D64F85B3E3682DF62249303CE62814FD04217A33E915F075FD7ABD20761C1BCDA4D47EB8E156C8691BAFE72EB671B4137F5494DE9BC1E84FC64119A48E162CE21929A53B8B6C3C0B2E623C09F3ED5FA07C1A9F04F9BC0079AF0DFF88DE01141A1582A69D972E5C895A489E6E91388DF5E7667F8D6930A8DF02932ACB9E7B818B7F659F75CF4E1C4A4E01368470FE50E7F6681C2E047403213D1953F60733966EC03BE313F1D9F4D1DDB86B8F01043447A10B0257C1FE091F90076F93CAF7D1F8D718F1FE086AE128B1364192974434F9B9F998663D56B24625E7E28CACE40E38DE0E452D5B84E20C4DF0AC26E0617CD2B615855E553FCA768D8832AB9BD7B6755555FE9B950CB6F862110E3FD80DDAD346BED84A7922B0E844EF586DA52A2A70195304FA55630FD57D85CC9A42BBB4E34A21F9058DC3910CBFB99819B214DA6DE00876FE3E080F240305FEB37F084978F5E1D8E7C147D3C2CBA649A6724259ABF357DCD75FD17FF55BB557B4CD3EF76F54C0088015F61FE82282FB9A22FC331BABE425298815CF4A6AA39A5017A056B151A96835A079FFEE3E3DFC615E3DFDB77AE75BED044FD9BF8A94341B1A7048DE03D69043F67098B18D66256A1BB54C5BB8D7B29222E0C003F0965E2FE56E4AC60C9CEBE081FBEEC169DF424E68062F8AE60D4B179B36074BE1F05960A89F62B21394B3B3D121CC6DCEFAD34E682F1376A9174548271564991825244ADA58380D5DB31D86EC855393E2328F16EC759E71BDC28F4FB57564A9823B82EB8D05126436BC9B8CFA121A74CAEBA735B702776015B026676503A287F2C77542A7DDF83948EB192E54D11B762B99856FB80769567905122FD2DB1569B1123C8901B7DCB1092D56EA6AA329F744E559DA136E59857B7E648197575455D2CF39BA398331735A599981285EA3BD2E23F9D9A1B0435F433D7F1B201B326B005C0ED75A3DBF38CA438DBC3032CEC3EE129B33A418386E4581D7EBCCD395AE058BC2E5BBC671F10FE3B71C7EDE92CD037F18D0872D69BCF381CEC3FD10A766F1D538F7CC3087C92DB580E16A360758C6226A01B35D7CD8CC15506697AAB601EA4F53E8B0647DB0EFC066676DC70ECF24B0DFEC9B0EC6ACD4AC21DAA8B5EAAFB003DFC1E4244275612F4261B29B117C40D58B29675BE44664788367F15F5E777A848A99B8630D180F03BFE9E34BD86EDB566161515BED281688A2720020


431781C994A8F676C3C3CF54312AC5C57E47869FDA6557C938C2943379081938AC641773843ADF5377BA3BDC439E9EF87EDF47465DDC64616FB869929D0C0A150F067289A8AE4B8BB7D884C0ED2D4CD66922420345A754D83099856918A78A81B48C2B4FFF9BFDD7686EB2B63290B40250E0FE2FA5F985C683E6DF40A6952EE4532A9E1EEE7E06075984CE821B465C4BB5BD55448E06782570922CA4486D02E5394C22513914BFB675DD46102BB144C8B64B9FC00C54715B88EAA7468BD0618837556BE05714BD5D0979275FAA3D150A98AD6EF0925FF1DC908C8425E89E9B1C2797F38683511D114D2F57BCA23DC125143370A7A54143BDA8D84F1F805C531BA9496BF5682B851583A807496CFB2F6DD67E84E7A903D99F9D09C67A5B64E5D246E4DDFC35051D970B26CB10E2D38EA54AE570F236AF4EA29FD4934D7A97704167BAF43906077CCD70A0313B7EC926A61776E07745B4CA0EE5A5BE4ACA5959CDBC5C2D14061E35D8212D1F92D66CA802CD058538F15F9319DA2CA0DB540BCC0CF18AC23E6335C20DE95F7B503DF6BE366035B587A65D5AC8EABD2F044B4496AA93BA84284C6245BD2E5B36074F22DB6867ABA72779E0419500CB3A9A50A96DCF04C6F3B736077893F11B7DF619E1436B9956F47A29BB2FA77EF690D10D788AD6A97910BACCA919AB95EF8F83F0634C6D926659409A2D0301BCD60BB5F27A2AB329A8B80BDFB1488840E2DD5EA9CFBAC3D470E1D0FA71D72818EC679BFF4CBA4EEB2331712C54766087C57ED8620B029838B979F008CFF260590C9EAA86F36225B996B0B0F9596C6E648878678FB3E8AD0EF2733A08CE634DC3255EC7B7A8D276FCFE23FF9E932559A6C66EDED27456AC973809D3E9F3B04A5426DE0E621B11EBD8F9E0F0406AD5B3A8446A260A0691E6FA90D05E8924126B8C6BA270CA17DF96811BC1211A37F4324EA44E78CBAEE3C4BB4ADA410A3F0B5796F1F1258F6D9CC7B2D8F78C35C105CA9487CB8258AFB10AAF6C66319205982B0B1D8E38902D176752A019F60F3C1D9A8703A5CC9D389EC6466C881C54320E2910EAA82CD83FF03CE648DF23603F2C053D2CA6AE74C05E6EAA783EE9ADEBD45ACCAF3F9121FFC26A280C33ABBFF486138F4829DF4E12C50F84E74C5ED50C6241C6DCC032DABE86B083366953613B10A133C1AA6ED0ABA6F5AD0D1EFC4D498E73BEC6367FDD41292E5C975C9B1195CADD7F2EF06B0D6D5B156FED4EACFE81C73F247F1C1E22FDC1FC55D11C20A195335E9D09A7A6F992355F9D6DB9A27329B81855B4CD42CBB76460A1DC5CF8AD4E1245C89EBC341967C8CE519BFFE402780CDE0D920CF291C290F8E4B2F93297ABE3D539F8E946E3428A35F05CC11D960D72F12BB29159825DBB89CEC0C3103AB07E10D2DF2FF2A3C9024BFE12D5925E2CCFFB3EC1741C61B681FC
5B13A1D826A6DDD0C872514D88EE5809D0527B0F1F6AEDF653945F1813AA6030C09B4C0E512068E8049BFDC2341064C9F7FA26ECCF3077111F4CB1961EDE6C9EC938748664945ADD87FC4A2CAC0525EB415DF8FEB93B38904E5EF617F8113FF64D9E247B991EA81709D05DE8292D7A7C2FCEC5EECCD5AAF56595783C172EEE00D19432D93A65F89D97DF3A6D468FA851781F363847CCFC48F64C52F99C9E99FC459924267A61AB115E6EA0558428E6A68F5354B1DBBC750E71947CB6401CDD02D49A880511A31385B280180385A00DE7E59BF46DE76037FDCEB84A6631E028B8E58DBA0B54035926F85355B6B271B32DE919EFB6F5658F9456D7808550953B7A92DDDAF9295259A748E72F439A0FAC11C1CFFAEE086798B34D9125DBD20B5FA00472C0F135251F905C4EB87F5F9F4B328249EB588309F6A5DA9D7D0DDE60063AFE0F620D5A2F8752AB21DB5A29A20B420DF3FD850AA9611D965318583F1EFA340456D68A8FFE0E2739200D5514C80AC674C608A5D7B8F81CEE90A2AE89ACD6CEC23134EDA9DB5E676586E23C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YuGothic-Regular cguidfix
/F1.1/YuGothic-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 477 421 rc
-41.5 571.5 m
517.5 571.5 l
517.5 -211.5 l
-41.5 -211.5 l
h
-41.5 571.5 m
f
Q
6350 w
1 j
/Cs2 SC
0 0 0 sc
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
10.081379 13.457222 456.83725 396.64114 rc
0.00009801 0 0 -0.00011897746 10.081379 410.00394 cm
2387522.2 -3175.062 m
2387522.2 3330575 l
S
CM
10.081379 379.78366 m
466.91864 379.78366 l
466.91864 378.77625 l
10.081379 378.77625 l
h
10.081379 377.76892 m
466.91864 377.76892 l
466.91864 376.76163 l
10.081379 376.76163 l
h
f
0.00009801 0 0 -0.00011897746 10.081379 410.00394 cm
0.00037633255 -0.11959696 m
4660900 -0.11959696 l
S
0.00037633255 3327400 m
4660900 3327400 l
S
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 317.17102 234.64256 94.438354 rc
0.62239408 0 0 0.75550693 11.01497 -415.67072 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(!")[ 15.000000 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 9.6796875 458.08203 401.92969 rc
0.62239408 0 0 0.75550693 29.375595 -415.67072 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(#)s
0.62239408 0 0 0.75550693 35.910732 -415.67072 cm
0 1064 m
($%")[ 7.000800 17.992802 0.000000 ] xS
0.62239408 0 0 0.75550693 60.4953 -415.67072 cm
0 1064 m
(&'\()[ 24.000000 24.000000 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 317.17102 224.06186 94.438354 rc
0.62239408 0 0 0.75550693 245.0275 -415.67072 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(!")[ 15.000000 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 9.6796875 458.08203 401.92969 rc
0.62239408 0 0 0.75550693 263.38812 -415.67072 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(#)s
0.62239408 0 0 0.75550693 269.92325 -415.67072 cm
0 1064 m
($%")[ 7.000800 17.992802 0.000000 ] xS
0.62239408 0 0 0.75550693 294.50781 -415.67072 cm
0 1064 m
(&'\))[ 24.000000 24.000000 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 285.43973 234.64256 126.16965 rc
0.62239408 0 0 0.75550693 11.01497 -447.40201 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-.*,-/01023/45)[ 13.500000 11.748001 8.508003 9.251999 13.259999 13.500005 8.507996 9.252007 14.003998 13.500008 6.996003 13.500015 14.004013 8.748001 14.003998 13.500000 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 285.43973 224.06186 126.16965 rc
0.62239408 0 0 0.75550693 245.0275 -447.40201 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(.*,-/01023/45)[ 13.250401 13.490398 8.498405 9.242397 13.994405 13.490402 7.010399 13.490395 13.994408 8.762405 13.994400 13.490402 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 254.46393 234.64256 152.6124 rc
0.62239408 0 0 0.75550693 11.01497 -478.37778 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-62,-/01023/45)[ 13.500000 11.748001 8.508003 9.251999 14.004003 14.004003 8.507996 9.251999 14.004005 13.500008 6.996003 13.500015 14.004013 8.748001 14.003998 13.500000 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 254.46393 224.06186 152.6124 rc
0.62239408 0 0 0.75550693 245.0275 -478.37778 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(62,-/01023/45)[ 13.999201 13.999199 8.503202 9.247200 13.999199 13.495201 6.991203 13.495193 13.999199 8.743202 13.999207 13.495193 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 224.24365 234.64256 152.6124 rc
0.62239408 0 0 0.75550693 11.01497 -508.59808 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-1023/45-78*79-:,43,)[ 13.500000 11.748001 8.508003 9.251999 6.996003 13.500000 14.003998 8.748001 14.004005 13.500000 6.251999 9.251999 12.492004 14.003998 13.500000 12.492004 12.755982 9.251999 12.251999 8.507996 13.500000 8.748001 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 224.24365 224.06186 152.6124 rc
0.62239408 0 0 0.75550693 245.0275 -508.59808 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(78*79-:,43,)[ 12.499200 13.987202 13.507203 12.499199 12.739201 9.259209 12.259194 8.491204 13.507203 8.755188 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 194.02338 234.64256 152.6124 rc
0.62239408 0 0 0.75550693 11.01497 -538.81836 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-1023/45-:,43,-:;)[ 13.500000 11.748001 8.508003 9.251999 6.996003 13.500000 14.003998 8.748001 14.004005 13.500000 6.251999 9.251999 12.252014 8.507996 13.500000 8.748001 8.508011 9.251999 12.251999 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 194.02338 224.06186 152.6124 rc
0.62239408 0 0 0.75550693 245.0275 -538.81836 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(:,43,-:;)[ 12.249599 8.505602 13.497599 8.745602 8.505604 9.249599 12.249599 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 163.8031 234.64256 152.6124 rc
0.62239408 0 0 0.75550693 11.01497 -569.03864 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-1023/45-:,06)[ 13.500000 11.748001 8.508003 9.251999 6.996003 13.500000 14.003998 8.748001 14.004005 13.500000 6.251999 9.251999 12.252014 8.507996 13.500015 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 163.8031 224.06186 152.6124 rc
0.62239408 0 0 0.75550693 245.0275 -569.03864 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(:,06)[ 12.249599 8.505602 13.497599 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 133.58282 234.64256 152.6124 rc
0.62239408 0 0 0.75550693 11.01497 -599.25891 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-1023/45-:,43,-3*:*3<*=)[ 13.500000 11.748001 8.508003 9.251999 6.996003 13.500000 14.003998 8.748001 14.004005 13.500000 6.251999 9.251999 12.252014 8.507996 13.500000 8.748001 8.508011 9.251999 8.748001 13.500000 12.251999 13.500000 8.748001 11.747986 13.500000 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 133.58282 224.06186 152.6124 rc
0.62239408 0 0 0.75550693 245.0275 -599.25891 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(:,43,-3*:*3<*=)[ 12.249599 8.505602 13.497599 8.745602 8.505604 9.249599 8.745602 13.497605 12.249603 13.497590 8.745598 11.745598 13.497590 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 103.36255 234.64256 152.6124 rc
0.62239408 0 0 0.75550693 11.01497 -629.47919 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-1023/45-4;03,-84/=5*)[ 13.500000 11.748001 8.508003 9.251999 6.996003 13.500000 14.003998 8.748001 14.004005 13.500000 6.251999 9.251999 13.500000 14.003998 13.500000 8.748016 8.507996 9.251984 14.003998 13.500000 14.003998 14.004028 6.252014 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 103.36255 224.06186 152.6124 rc
0.62239408 0 0 0.75550693 245.0275 -629.47919 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(4;03,-84/=5*)[ 13.500000 14.004003 13.500000 8.748005 8.507996 9.252007 14.003998 13.500000 14.004005 14.003998 6.251991 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 73.142273 234.64256 152.6124 rc
0.62239408 0 0 0.75550693 11.01497 -659.69946 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-1023/45-.*,->3?,*-477*::)[ 13.500000 11.748001 8.508003 9.251999 6.996003 13.500000 14.003998 8.748001 14.004005 13.500000 6.251999 9.251999 13.260010 13.500000 8.507996 9.251984 18.492006 8.748016 6.252014 8.507996 13.500000 9.251999 13.500000 12.491989 12.492004 13.500000 12.252014 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 73.142273 224.06186 152.6124 rc
0.62239408 0 0 0.75550693 245.0275 -659.69946 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(.*,->3?,*-477*::)[ 13.250401 13.490398 8.498405 9.242397 18.506397 8.762398 6.242402 8.498398 13.490402 9.242401 13.490402 12.506394 12.506409 13.490402 12.242401 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 42.921993 234.64256 152.6124 rc
0.62239408 0 0 0.75550693 11.01497 -689.91974 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-@03.*,)[ 13.500000 11.748001 8.508003 9.251999 8.243997 13.500000 8.748001 13.260002 13.500008 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 42.921993 224.06186 152.6124 rc
0.62239408 0 0 0.75550693 245.0275 -689.91974 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(@03.*,)[ 8.248800 13.504801 8.752800 13.240800 13.504807 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 12.701715 234.64256 152.6124 rc
0.62239408 0 0 0.75550693 11.01497 -720.14001 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-1023/45-.*,-73*4,*-477*::)[ 13.500000 11.748001 8.508003 9.251999 6.996003 13.500000 14.003998 8.748001 14.004005 13.500000 6.251999 9.251999 13.260010 13.500000 8.507996 9.251984 12.492004 8.748016 13.500000 13.500000 8.507996 13.500000 9.251984 13.500000 12.492004 12.492004 13.500000 12.252014 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 12.701715 224.06186 152.6124 rc
0.62239408 0 0 0.75550693 245.0275 -720.14001 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(.*,-73*4,*-477*::)[ 13.250401 13.490398 8.498405 9.242397 12.506398 8.762398 13.490402 13.490402 8.498405 13.490395 9.242416 13.490402 12.506394 12.506394 13.490402 12.242416 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 9.6796875 234.64256 125.41415 rc
0.62239408 0 0 0.75550693 11.01497 -750.36029 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-84/=5*-=?3,A-B*,4=4,4)[ 13.500000 11.748001 8.508003 9.251999 14.004003 13.500005 14.003998 14.004005 6.251999 13.500000 9.251999 14.004005 6.251984 8.748016 8.507996 11.748001 9.251999 20.747986 13.500000 8.507996 13.500000 14.004028 13.500000 8.507996 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 9.6796875 224.06186 125.41415 rc
0.62239408 0 0 0.75550693 245.0275 -750.36029 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(84/=5*-=?3,A-B*,4=4,4)[ 13.999201 13.495201 13.999201 13.999204 6.247200 13.495201 9.247200 13.999199 6.247192 8.743202 8.503204 11.743195 9.247208 20.743195 13.495209 8.503189 13.495209 13.999191 13.495209 8.503204 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
9.4589844 9.6796875 234.64256 95.193871 rc
0.62239408 0 0 0.75550693 11.01497 -780.58057 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(*+,-84/=5*-=?3,A-:26*3)[ 13.500000 11.748001 8.508003 9.251999 14.004003 13.500005 14.003998 14.004005 6.251999 13.500000 9.251999 14.004005 6.251984 8.748016 8.507996 11.748001 9.251999 12.251984 14.003998 14.003998 13.500000 0.000000 ] xS
Q
q
9.4589844 411.60938 m
467.54102 411.60938 l
467.54102 9.6796875 l
9.4589844 9.6796875 l
h
9.4589844 411.60938 m
W
243.47916 9.6796875 224.06186 95.193871 rc
0.62239408 0 0 0.75550693 245.0275 -780.58057 cm
/F1.1[ 24 0 0 24 0 0]sf
0 1064 m
(84/=5*-=?3,A-:26*3)[ 13.999201 13.495201 13.999201 13.999204 6.247200 13.495201 9.247200 13.999199 6.247192 8.743202 8.503204 11.743195 9.247208 12.247192 13.999207 13.999207 13.495209 0.000000 ] xS
ep
end
