%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 528.000000 164.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 528 164
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 528 164
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YuGothic-Regular
%!FontType1-1.0: YuGothic-Regular 1.0000.1.6200
14 dict begin/FontName /YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid34 put
dup 34 /gid37 put
dup 35 /gid35 put
dup 36 /gid36 put
dup 37 /gid31 put
dup 38 /gid29 put
dup 39 /gid30 put
dup 40 /gid32 put
dup 41 /gid33 put
dup 42 /gid12 put
dup 43 /gid17 put
dup 44 /gid18 put
dup 45 /gid13 put
dup 46 /gid15 put
dup 47 /gid1 put
dup 48 /gid22 put
dup 49 /gid19 put
dup 50 /gid26 put
dup 51 /gid4 put
dup 52 /gid3 put
dup 53 /gid2 put
dup 54 /gid5 put
dup 55 /gid7 put
dup 56 /gid14 put
dup 57 /gid28 put
dup 58 /gid27 put
dup 59 /gid21 put
dup 60 /gid25 put
dup 61 /gid24 put
dup 62 /gid6 put
dup 63 /gid8 put
dup 64 /gid10 put
dup 65 /gid23 put
dup 66 /gid20 put
dup 67 /gid9 put
dup 68 /gid11 put
dup 69 /gid16 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<






2900000100750010047D061D002D0021401201012C1919142C03406C2C03141B406C1409003F2B3F2B12392F11392F303101070221220706151417161717041716151407062322272627371221323736353427262727262726353437363320045C8755FEFDA1584D5449AB3C0115614C9686DCD48C7B3587510136C25F4C514EC534FD5F4E857ECA016704C32B011252477186453A2A114673599ECA71656B5FA733FECD5C4B7C8A4542320F416E5B9AAD6E680000010054002D04DD0602000D001240090D03020209406C0208003F2B3F333031010123013301161716173336370104DDFE0FAFFE179301231D2B320D154043012B0602FA2B05D5FC625A92A72DE5D703A20000020085001403C70446001B00260031401C1B1B020A0A0802141C4D6C141402080A02194E6C02070C244E6C0C0B003F2B3F2B3F12392F2B1112392F11392F3031131221201111141723262706232227263510253637353427262322070506070615141716333237B05C0137016B19770D0A87EBA35649015A87CD40387ADC3E020C9A9FF6403960CE88033F0107FEACFE97CD8F3B79CD5E4F7C01163A170A37923932CEC4031E32BA643631DE0000010085001403C20446001B002140120101180D0D1018034E6C1807100B4E6C100B003F2B3F2B12392F11392F30310107262322070615141716333237170221222726351037363332171603BA7D37CD9752485E5083D8377A60FED7D477698976B597665D032125E28072BDDC7463E629FEDBA38FE501069580544B0002008B001403EF04460016001F0028401707070A121F014E6C1F1F0A121B4E6C12070A054E6C0A0B003F2B3F2B12392F2B1112392F3031012114171633323717022122272635103736333217161527262726232207060703EFFD19685787DD45776AFECFD77C6E8D77B2CB786B7F0E5A4D788A564C0B0223D77460DC2DFEEDA390E4010497809D8CD93FB25C4F6B5D950000030066FEBA040A04AA0033004300520038401F002E30302E0D0D2E44441C2E3C0B4D6C3C3C1C2E344D6C2E071C4A4D6C1C0E003F2B3F2B12392F2B1112392F11392F11392F10C430310107220706071615140706232227061514171617171617161514070623222726353437363726353437263534373633321736373605220706151417163332373635342726030615141716333237363534272627040A0A5233292B6C78659A5C4E662C2B82C9D0503C8880D7E579673F365C9C8E817C679373523B4A42FE747348425344657447425444DFC86B5891B6614F3A3C9004AA7516122A5798A55E4F2039413714130D1416473560874E484E436B4D3D351E227465615DA6A261512F53221EBE4A446C79453849436A7C4539FC8F377E5D2F263B314A4422230F00000100CD002D03DD061D0011001D400F010110031101
09100A030C506C0307003F2B3F333F1112392F3031011136333217161511231134232207112311014CAEC48A4F4681BEB0A27F061DFD56D3574D7BFD0602C3E3D5FD2F05F000000200AE002D016A05C900030007001240090706516C070306020A003F3FC42B30310111231113152335014C7F9DBC042DFC000400019CBFBF00000100CD002D014C061D0003000AB30301020A003F3F303101112311014C7F061DFA1005F000000100CD002D03DD04460011001B400E010110110609100A030C506C0307003F2B3F333F12392F30310115363332171615112311342322071123110148ACCA8B4E4681BEB2A07F042DBED7574D7DFD0802C3E3D5FD2F04000002008B001403F10446000F001F0015400C00104E6C000708184E6C080B003F2B3F2B30310132171615100706232227263510373617220706151417163332373635342726023FCD796C8B76B3D0786A8A76B49851485C50839752485C500446A291E2FEFA9681A490E301069580688071BEDC74638172C0D9736300000100CD002D029E0446000D0016400A0A0A070800070806070A003F3F3F1112392F30310107220706071123113311363736029E0A6C5C562C7D793C665404467F5D568FFDA80400FEF6994C3E00000100500014029C059C001300234013001109090C0411104E6C0111060C074E6C0C0B003F2B3F332B3212392F10C430310111211521111433323707062320111123353311017F0102FEFE984243094051FEFEB0B0059CFE9166FD66B50F680B010002B3660152000001004CFEBA03A0042D001A001F4011151414051A10060508506C050A4F6C050E003F2B2B3F3312392F33303101010607062322272716333237363737013313161733363736371303A0FE7D4161507933290A372F5E3B352C13FE9389DE14290A0F161708D9042DFBCBB8493D086F0C3D35773103EEFD6C3D912B47471A028F000100FE02AE070403450012000013162121203732151514232623232107222726FE8A011C028B011D9B1D1D6BA3A6FCE2EA17061003451206174D190412193D00050106000507470690001100230039004D0065002B40136460621713154A623E1536622A150E62031562002F2F3311331133113311331133113333113333303101373633321716171615140707062322272637373633321716171615140707062322272601363736373633321716171615140706070623222726133637363332171617161514070607062322272601363724370013161716151407020506050607062322272605683E04040305767104053204050706672736060404048B5C04082F0405060562FA6C09141006090C0507C597100604250809080C951B171E0B07050ACF890E081A130608080D94FEEA6B580150E30165E00A19040EDEFEBBDCFE8A2F2B0A0C0D0C2E05E32B030350


FEE30E0E011D027701200F0FFEE001A8F6B6233D1A070E0E0545CC01138C7E6E4908161C16A50111040C7F5D7D0C04040C7D5D7F0C04786957571D1E161D070B09080618603E6A4214211908AC026FD5D5FE890225040E400E0401C4040F3F0E04040E3F0F04FE3C040E400E04FDFC38301B0D09080B06130D534B1A090E121A3E0F1C040346040E856D870E04040E876D850E4CF9F9F9F9F9F9FEDB040E3C0E04040E3C0E0400060062FF6007980692004000440048007F009C00C9014440E427160F10485D27014E2701271E0C4927240B49273B411A0F10484F415F410241220C4941260B4941220F00451A10496E4501045B450145220D4945240C492C45010345447D17016E1701171E0E494F170117220C4917260B49174861526D527D5202521A0E494E52013F520152220B4952684BC9BBAD7DAD01AD1A0F49AD1B0E49AD1E0D49AD220C49AD240B49ADB49C8E7D8E015E8E6E8E02044B8E018E240B0C488E952000400050006000043F445F4402DF44014044014048012F483F48027FB40120B401033B0044484BB49595B44B4844003B0706878556835D0A0106480A010A06002F335D5F5D2F3333331217392F2F2F2F2F2F2F5F5D5D5D5D5D5D715D11332B5D5F5D5D113311332B2B2B2B2B5D1133331133332B5D5D2B5D113311332B2B5D2B5D5D11335F5D2B2B5D5F5D2B113333332B2B5D2B11332B2B5D5D2B303101060706070623222726272437363707223537352734330521253215071517142325231114171633323736373637161716151407061506070607062322272635112521352135213521011123072235353433173311342716171615140706151133373215151423272311363706151514070607060706232227262736373637360135342716171615140706151521253215151423252105223535343305013637363716171615140706070607332532151514232521052235353433053326272635343737363332171617046F2D8C70F213060C0E141E012073721AD50E04040E0106018401040E04040EFEFC1523256A7F29240D09021C211701010A1411233CAA7C444CFE3502F2FD0E02F2FD0EFDDD2FB40F0FB42F0E3F2914080C19B20E0EB2197F81061DBCE1410D0F060B09170E5E630D1618035E0E4D1D170C0B010001170E0EFEE9FDFAFEEA0F0F011601711C2112032D27120E130825148B01210E0EFEDFFD85FEE10E0E011F1F1E32030F2B0A02050639230164F6725C3B0519211439615FBD040EACC9AD0E04040EADC9AC0E04FEE14B0B081F1A3C2E5F190E090D03070904632F291A2F0E107001454AB448A6FE27028B040E400E040102BA56020A030D041D319EFEFA040E400E04FD9A364D1F210F130F6956170E0E122B300E2505090A044D2377370406040B081C175A23040E380E04040E380E04FEB8


2B2B2B2B2B2B012B2B2B2B2B002B2B2B2B2B2B2B2B2B012B2B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B7374752B2B2B2B2B732B012B0075737374752B2B2B012B2B002B2B2B2B012B002B2B2B2B2B012B002B180000
00>] def
/CharStrings 38 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
/gid18 18 def
/gid19 19 def
/gid20 20 def
/gid21 21 def
/gid22 22 def
/gid23 23 def
/gid24 24 def
/gid25 25 def
/gid26 26 def
/gid27 27 def
/gid28 28 def
/gid29 29 def
/gid30 30 def
/gid31 31 def
/gid32 32 def
/gid33 33 def
/gid34 34 def
/gid35 35 def
/gid36 36 def
/gid37 37 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-840 -619 2378 2642}def
/UniqueID 4360755 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9319293CFDFFDF66CFE9885998F65FE6E49EC9C7C15B8E78E1E7286DA449C68714CB01D946D781F0F8771F73150CA2FCF74DB3583C9BF1586E2C4E85B95E8B3113DB442B79F34A01630AA32F0C67B8A852822B5414416BB85EF32D511F8BCDFB36616A0A2905A39F955D2F3A137D18D9947CE45A6B57CB640A135709B9B8D2C9260032155C80C70F430F4821C400C4098809AC091E501FCB2D7A4797916B3B9834718A22B42C5ADAFB87F762020E8E893053E1733928F691F65F42C53CCF1C365F2929CAC6A305FF8AFB5E14FB63BCE2CE488743961ACF081A86D7C65B690209E13B39F04173C6582B4BD2B392828C7A01F81F593B71EA783791EF8A5BB69AEE37B9B28F14B3D44EE67803C621B3A1A5BBD4E86806D1314F66DE2246A0ECDC547FE76BED033A5874DF6AA64C1FFA43C3314BA075FE1695E5B5560C4B4A4EDD20B0B3C9D2EE9E8A8876A0655AC46326EB28409DC74DAB8EB856B6D997CB5E91B1D33ABECEE54C97A295BC34A3BC84A4D88E52A5470B646D475058CCC1A4B0A233C508F371E67EA3E74B8EB1856EC97AEEEF961AAA39A236B89DC66D7D9403D56696E4C7F5D41C00059FCA5C85B7796346FAD279EBF21C5F71FBF86D3ED046AD6492B03A178AF0431F5F2DB6A2DD5F76DE5614F5E9D9FB7D47C3B6AA395B2434F2563E2773288987A12980FFBEBC32ADFB57D9E960D79196380BFDDA657EDCC28F97591E676F62990BACDAB1D4088A74737C192DF4B26CC3979370B3C8A61CD17315
BB3164B7577A067807F7DB2D1784D7A066D33E1335CCB21BE22A27B47CED30AEA974EE9E51CF06DFEF7D892F0D414991BA24A44F83E184CAF28E4A990DBD751D32D380BB15116926C6C21CC25B2FFC7CB3D7CDAFBAC0DE1537DF461E34C1DE6D74A1873141BB5BE3EB2B8D99E3AAF19D59DA844B7EB44C0A7CA4840FFDE1E716E65C926263F1EDA515EFB13DE58D815D24223B8BCC801D87A0CE994DC1EACD9115D7E6DEEA9770F995E33454F060F52E6A7288F740F46482D64270C346287ECDF33561AE523A3F4EAFA0B904E6EA9FE7FC36812BB80FADC5C63F40EE2149DC5F55DA9D4FD11F4832D10B155E17982D0712452A4984D3ED199EEAB438748A365EFA64B01FFBBE9DC2520CACE05638281A56B25222BC5C60A575A85B17DDC675CFD10D18F3BA4C672080B5C1AD348A89412C34768D9276127B2127BC89FB10BA8BAA3F5D711361CE835BFC20ECBE93D628B73D3AACD8BA12E782323C54E61C4D1E270546756485117AFDDBC43DFA77EAAF523BF169FEF1E39592758D34E5E824DBC778F0CC58F71E0F1430846A2B5E9E66CB4BE9685F5E125805F8FA9050DBC256894E394DBEB0B6F73850B24118A2317D6AAF260CC8509C37CD846B9892F037D73D508DCC64A675180E5FC1891CDE6E149521494200DF785760C37A934CB6266D94B6CDA0771821F1071C91C868DF2C24DDE3CE6641B2CADB3DB934F208E81CF0B74106C5D2B614196B23929F0BA67D42269FB88E3F415ACC25A72DC293FCDD44679C83C9B2732D0EB8A2C125BBB007032C60D57AD3CD78C3EB40CB23BC32206DFD59092E5997232027ACD18684D1931C9D8EDAE42A3406602939461905107DFA4BC15345ADD1BB52145B1489A6F67DDB0892A67C99B5FCD5A464CC65BD00B44632AD0804745858BDEADF6840AD3F4AA607A78E8653E148B3985326CA54819641913140206DDA094FC2DA8B3CE8EA46C24872B47E278035E2424F560D9A69E5DFE3767747AC059084454DE39FFF49D9F59C71202ADDF4E9929EA73B16F065E2515D457ACDF426471EF65439DD296317265232919740438F04CA8162F25B879FA5AFC95909A2C0EB1CC810DC67B44E0CD3EA06842816F11C6818F75F1878F6E8F024CA31FAEF20959FA38624EB02AF82A03D89D67B7FAE522BE6BD23C1E3BAB47A4998262C4AEA6D2102C5A316E93EC6AA62CBD300997EF36A28C2C830679EFFCF7D9B0D6ADB23E9B1DB1AF30900516AD0B57C879AC98A35550ADABADAE4A9BDFAAE6BA52642913B79213519E490FE599EA674652A5A04521332CE9FC80799F01BE7E1CED3ADF7CD792FC122695250DF01A92A68EF9EA2753F0E73CF3A6607C1C0112AD6CF475CA762D6EE96D662C6C802B805ED4C112BE679C9824031C760C2358593EADD204AFF5FFE19B9A7132956C8C83D980E834920400E273BDC86BEE107


33D0BC17816D3286ADE9FF36720118ACE901E1469AD3EEF3A551A987665060A4B0130FCA04018EBFABB3DC3A90EB762C4A82133C2C1DFF0141768754766CD66AD237FB29A0C658D9B123EFF2EFEE1DDA6E1A179BC49E0BB7BC61AEB0E513E29C6AA8D9109C03228EE645B7DEF2FB50328F755011D04A7717900213AE9BB9EECE9CC80BC1D175F02773B336D7F09396F369080CCCD9086F890238FECA288F07BEFE0757805ADB0AECE59BC5699E9FF24789370084849A3D3DE289A2B563F3BF80B42CE67261FF988258B3459DDA1824ED258D67C92CD561A1C2871EA5323F241956B7D1A6B233E5EE2E9113EDDDADD74BB92B9E2C235A7A46C6CEE3CB260ED32A1AD4228BB5B808AF9AEA3F2EFA84C3C98674717EEFDBE072344F1001684D551669799542E33DF35D2BC5D8446F4D42EEDD7E07A449F395DA88565E5E23919D0DF87CEA960D3523876F2C2F4426BD9E556B1FF18BC6751C88788C07172545CA80EA1C7C4725272FEF32A356425B0B4D78D532D43F3ECC4423BC8C6A489138A5E393EAD89DD48C3C70ECADA691D01C42286E6B3995970765AB5D69DEF1F45D7AA6A66EF62AC85E0861B99218A0594E155AD871FC75E10CC34449D9D949379C5AF579E5B3D6B6E613CC9175C41D0C2709699043EF6391B58A73D8727BD5985836D49281A68FB157D3E39ABAA18E013800E02EF3335A5C077DAAE41616CFE15D4E4D38F894F34E80F91BFCA38A247E8794D8425EDA9BA46C41FBEFE0640692918363E2A5C9360DFE3262D4E20EB36B45F8B742685D37408D80A04FBDC6A531CB89E3562A2F894431506BBDE244B0F7A3E3037F2C37AF22D0A5C42B110683694C20C038385F4DD2F70D86C85F4A9C7B73E78246BDE921D5609A0F48331DD61AF7B7775A74F3B1913B4D2E82AB7EAEDAC899061B4D038EB99DA6EACD66EEF86EA7E8D25C4F24652399E13EFAED7AAF5A87DD3687A3CBC97F20A0EE12AB1C13320A4213704852CED821E3AD80C2BEFFC14E6C409FBA3567AE79F88BE0F3226601C0C642F5733117AE11869AB6C3935B6AD47CAAC9706BD058342DD50F61C9552CDDBC1C35CA399DAF98C089F7B4907B7EB55DB55CE68044A78D269D0F7CB457230C658A67FB7CA7D0B442469CDBF9809E44B36FF6F266DF7985CF06F923CE9B671BF0E57003DAC8D388D9D1798FA683A23E4C21282B563071EC476112024F56F6EB2330D2F25230ECC3BCC026D89D880D54FE498656A0C212F8AA269ED53D18AFF82002E27285684990227B15839EAA9F6E12C78487DCB92B80F6E0FE8DBE98CEBAB24D259CCEE3479ABB1F2844769E1AEB2DBB41C16EF487E14940AD56E9DC22BBCFF10B07122F62DD96F3D17F6980101A2E4CC1B248C3C853C1FA067074AA0EE9F6CAFD1C756F68F258C0BBA902D9E3278F1982376B73D204A614D6F95ECCDD320D0E
F328F6A5360155B738EA67F5527001C2793AAC54A00BDDA556C706276AA5D620DD2C92780555E688347EBAAE6E47E9B5CF87A4979BC2A8FD69D81FDD5D68FA303D26A138A9E76CD4226D8A95465D50828FC34D57E9AD02550F0B03841B78FFBA409EE0F06A8772A4ED1566F81E8B93DA24C792E0912DCC8E27B203E43D3978210AAAD5DB27C4D7DD3DD67B630B505BB620008D9F735C0E39CB6BABF239A6DB4E5CAA515B9711603E6F0F647C5D52D16B8AE38FF324CDD3BE94A50799A33716DBAE73D418C248B1C0BD50ED5FC6E8A795A04BB6CD5A7FC7279C736C32269606ABE6F713D9F90EB28A4E1CB3584929499F246DC20D7D26D927A54FEA3607B0CC0FC65A4A3D3D3DB8BB541E5A1F0EE472308F3922278DB5839552E76A2881E51708395521DB13264564C723EB6AF0F44B04B59309870337358EC3A4D8D772D6FA2F14725A4328F0D1B97BC66BB86185FD4AC8A1E67BC052300649021DEFCD145D0708637081BF64132174F54A0B4E33AD1DFDF8558829100B64ECDF93763413F2B2C0A5F80C1C7486B4147691C021D9B0A16FA740958D9B55FE258AAD963C551D6DB677B92920FE87985C0597DED0FFDB39148B7C749A33E599C4CA9EAE03F5595C2B0C4EEF24419604092C485651CDE2A25021FB72668E57B37E2F1C628AC2614F9427C71C8E75FA5A0104E3D3012702A19A3389D8FD741161984769F6181121A619E3994997AD3489753366ACC8138BB6FD589FE5EA4F8F8A3C7AF85E75738EC8F59D8967C81E26EDDB7F2F59F61B8BE42B1C27736E04A4A93E41D7922F7586D9C986192C07D6FAC13BDCE9833B16660917AD2D472C34F11790C51B50D9031FADB1CC62C10F8606F2E3293DBA1BB7590D0D0991BA5A4FA495BF73837DF61122809C241B0AD7AFE21C2A301572416286D12F14BB9708F2510D95FFF6DBE7FF3B4075FDE1F706F71FD7B6793DDD8844C22550DFFFD982812EB11CFD057035290A6B064FF6F2EFE98C3D8BB1BF802AC36E50B25590E4E86B575C1AB258C72FB7C784D910E6B7411D783D478DF6677BB7C086B67DF8884D6D6C22946238F5464E8F3503DC73A47AAF4DD9D54ED10154ED5F2EEF26DA75DFC16ECF9936EF2489B84DA4C2D48735A52604AD93CEB685128B7267E728F3EDFBCDDB64EB790B8F4BAB7527614F656EF0E4C724E83F9E9B94299A3F32752A6089E870BC614AECFDB1F5C993D7003A34DDA2F9B82B5B40A7D90395969B0E721A75CE12431D31FB5BD3D59C9B6B1A3E6EEBDDF154BAD2E6484EB62700CD658B1C3F1C37B28ED89E24DF6E8A45C24B012CC045971AB33A1ED72D2610A4F8934EA28D2320FF08B9A308090B9126112EE9FA65DBDB439DF551EB8C6E4D7ABB2F6197D6586C4BC9458A76BD1C2212B69FA65C3D5661240080700669812F91C98DCA011CDF404F9D84AEE144927E0D
8E9232812DC0AA43E4E454AB52DB6A09922C48A58DD4BCE7AA40048DB0DF78208E7DBA222CC7A9399B58FA22546B02D66CCAE6829FFB84E8EB124C82669585B0250ED459106170E318DC15767682F575C140055FE2F927EAA7E0040E02A817F1027BACE3446ADA998EA47F8E5256D57575D8DC2F992A7A67D2AE7E55FB680138A77478A4D0834D1D108E44FEF22E5410F39538BA5E340BF0218FA51133B75444170D340D6410D46846ED3446F050E927303E355F9A79DD85DB7E9740C5940EA3C406CAF3B821BF2963FD48B2CDA2D1E3EEC2CD9C541ED5C0898FAAFF0A6A8DAED66785A207810AF829074ADF1199D6AD2D736163E7B55DAEE232C4A6B265F9BD4D68D74A3308DB04B398CFFEE4888F76C3109670F251FBA0A83A91C36CA53AA8A7932E747501B8D684AFFCFE0A01A03D00A2629D96A5876AB993A92649D9C52EF053898186D8B271A5E66B88C8F8383CC6F0DCB99734C63ACAEC873833C4E4C2974DA6EBD9CACB3E84C61685D4E262B898CB4495CDF975B298094FA14811631BC7AB77374A3C8CBECB0241E4A8D0D20AD4AF1586AB9ED192B7CD1D95D370482B0C2C6AA242E7AFCAEF8F6BE3708DE7A6667CC127721C2BB5557655D2BD7F8ED0B6E220D444CF29A4FFCBCC0F036DCAFBF32B314E18BB412E4A0784FF2F52B6F073E4AE1F31D9B8DFEF5CF10344EEB46D2FF02F5CAD50D781BC41E111AD8D0B69978F0AAB7C97CFE48A1F79B7538D5FE050FD1370D541995DC8288DB6B710821504287F50CD9D027900D070D16DEF45288260036901E08284249E8F489CAD088F44ED42CD8BB2E897DB1EEEF998C473E02E995259F7967145DA0C233CB141838B3108665EBC58AA2D45C65BD01964B46BBB83E9E2AD29AB6D5D2D6054E2E3D07C14F5FE1282C11830D738F559B1179F145092B96ACA035A0DFE32EEA096B5DFE8EC96D84FFF74D1B08E1B8BBA89C31D93D33DE70816C9D0C89E9F749B9B5992038C48902E8DE84BF18327E51EFF0C3B381F15624B41C3BFAAAA71509F234C52138ED5D59472865D1A71C54F4784593F041F53A5FE74BDC060410EDB14B29E6EC7081B3067A8DD6BD4D83A28D0C227BB17653C5365BE6554337629E2D64B160A0B67CC8E466A7DFE4F827B6387B16DF5F79534E970E04DCC13B1B0FD98092F42C977991E5E07252326809DDAF02EE97A814863E396445CA10ED44BBB5EA4A3C5CFFF41E401AAD1EA5E762AF9AB6BEF738F26C5A6F5B603EA1FFE93F67EAF702D9C0AF1D4C1F67FB0729B7B1F36A6BD6301F100E05927F9AB6B78D3E6D4AF9D1BD4D26421FD604088E75E566FBF421F71EC12BC5F123A306CE7FB0B6F706065532C7A2A5DBBAA8CE83963D3F43AD76611494679FA915515327EF8B69532EDED2D92E9FC42B9C5FECF4A4B9B6ACCFFD0E7CEAC1BEE23827A4E3D41C7D2C07722603A

BB6EE5ED876B43E62DA2D0FB6429A080ABABF5140449AC045A9D6656F9EB05192BC4CAA96F69BD026E65B8260E8047DD3124D4BA93F465069E878E19910B3B8910480FC391CFDEA3B45C223ADE41FB60CE2B0B4D24832BAF2CFFF57F49E894AA214DD2B76EBE855706A13A64F2E001C9B5E5D7122E5B59C35B07A917C2CDC7EC3158265819EAFE5FE162E851717EB9EEFC3051F0E2EFABD82AE0C7214E0BBEF41E32C6B656668E214446B45912AFDCA9FDD3B5E2F524C6D799CA39DBDEB542902DA04CDD92EDB86915EEA29A87F06FD530FF12174A4B3BA30780CDCF60C1B8D645415227F05001ED37178CD9A477D6798926B3D56AC8ED951214CF02FCF706E7A2EB33F03C735A63D4D33F52FB2097558D443A4C054509912AC6B9D6ACBA3B042545ABABAC19F5048BF1D145AA6586B7AA528076CA76A6FB10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YuGothic-Regular cguidfix
/F1.1/YuGothic-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 528 164 rc
-17.5 554.5 m
541.5 554.5 l
541.5 -228.5 l
-17.5 -228.5 l
h
-17.5 554.5 m
f
Q
6350 w
1 j
/Cs2 SC
0 0 0 sc
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
9.6916227 12.597564 507.65189 140.93373 rc
0.00010891713 0 0 -0.00010826481 9.6916237 153.44536 cm
2387522 -3174.8286 m
2387522 1298575 l
S
CM
9.6916237 125.9461 m
517.34357 125.9461 l
517.34357 125.0294 l
9.6916237 125.0294 l
h
9.6916237 124.11278 m
517.34357 124.11278 l
517.34357 123.19617 l
9.6916237 123.19617 l
h
f
0.00010891713 0 0 -0.00010826481 9.6916237 153.44536 cm
0.00195558 0.11549631 m
4660900 0.11549631 l
S
0.00195558 1295400 m
4660900 1295400 l
S
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
9 68.971062 260.74219 85.935188 rc
0.69162387 0 0 0.68748158 10.729059 -157.89787 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(!"#$)[ 23.999998 23.999998 24.000006 0.000000 ] xS
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
269.05057 68.971062 248.98459 85.935188 rc
0.69162387 0 0 0.68748158 270.77112 -157.89787 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(%&'\(\))[ 23.999998 23.999998 24.000006 23.999990 0.000000 ] xS
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
9 40.096828 260.74219 114.80942 rc
0.69162387 0 0 0.68748158 10.729059 -186.77209 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(*+,-./.0122+)[ 22.000799 13.504799 12.496802 17.488806 14.992798 6.736801 14.992805 6.256797 13.504790 8.752791 8.752808 0.000000 ] xS
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
269.05057 40.096828 248.98459 114.80942 rc
0.69162387 0 0 0.68748158 270.77112 -186.77209 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(3453657)[ 13.250400 13.250400 6.242401 13.250404 13.250396 6.242401 0.000000 ] xS
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
9 11.910083 260.74219 138.87128 rc
0.69162387 0 0 0.68748158 10.729059 -214.95885 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(89:;<=)[ 15.748801 11.740799 8.500801 13.996796 13.492801 0.000000 ] xS
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
269.05057 11.910083 248.98459 138.87128 rc
0.69162387 0 0 0.68748158 270.77112 -214.95885 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(>5?54)[ 13.250400 6.242399 13.250401 6.242401 0.000000 ] xS
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
9 9.1601562 260.74219 114.12194 rc
0.69162387 0 0 0.68748158 10.729059 -242.4581 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(@A+=B)[ 16.250401 6.242401 13.490397 13.994396 0.000000 ] xS
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
269.05057 9.1601562 248.98459 114.12194 rc
0.69162387 0 0 0.68748158 270.77112 -242.4581 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(C44545>C56)[ 13.250400 13.250400 13.250400 6.242401 13.250400 6.242401 13.250396 13.250411 6.242393 0.000000 ] xS
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
9 9.1601562 260.74219 86.622681 rc
0.69162387 0 0 0.68748158 10.729059 -269.95737 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(DDE*)[ 14.248800 14.248800 15.496797 0.000000 ] xS
Q
q
9 154.90625 m
518.03516 154.90625 l
518.03516 9.1601562 l
9 9.1601562 l
h
9 154.90625 m
W
269.05057 9.1601562 248.98459 86.622681 rc
0.69162387 0 0 0.68748158 270.77112 -269.95737 cm
/F1.1[ 24 0 0 24 0 0]sf
0 424 m
(C5454)[ 13.250400 6.242399 13.250401 6.242401 0.000000 ] xS
ep
end
